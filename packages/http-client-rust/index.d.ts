/* tslint:disable */
/* eslint-disable */

/* auto-generated by NAPI-RS */

export interface HttpResponse {
  data: any
  status: number
  statusText: string
  headers: Record<string, string>
}
export interface HttpRequestConfig {
  method?: string
  headers?: Record<string, string>
  data?: any
  timeout?: number
  params?: Record<string, string>
}
export declare class HttpClient {
  baseUrl?: string
  defaultHeaders: Record<string, string>
  timeout: number
  constructor(baseUrl?: string | undefined | null)
  getBaseUrl(): string | null
  getTimeout(): number
  getDefaultHeaders(): Record<string, string>
  request(url: string, config?: HttpRequestConfig | undefined | null): Promise<HttpResponse>
  get(url: string, config?: HttpRequestConfig | undefined | null): Promise<HttpResponse>
  post(url: string, data?: any | undefined | null, config?: HttpRequestConfig | undefined | null): Promise<HttpResponse>
  put(url: string, data?: any | undefined | null, config?: HttpRequestConfig | undefined | null): Promise<HttpResponse>
  patch(url: string, data?: any | undefined | null, config?: HttpRequestConfig | undefined | null): Promise<HttpResponse>
  delete(url: string, config?: HttpRequestConfig | undefined | null): Promise<HttpResponse>
}

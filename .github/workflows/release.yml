name: Release Pipeline

on:
  push:
    tags:
      - 'v*.*.*'

env:
  NODE_VERSION: '18'
  RUST_VERSION: '1.70'

jobs:
  # Create Release
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Generate changelog
        id: changelog
        run: |
          echo "## What's New" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### üöÄ New Features" >> $GITHUB_STEP_SUMMARY
          echo "- Enhanced UI library with animations and accessibility" >> $GITHUB_STEP_SUMMARY
          echo "- Mobile development support for React Native and Flutter" >> $GITHUB_STEP_SUMMARY
          echo "- Complete design system with tokens and themes" >> $GITHUB_STEP_SUMMARY
          echo "- Interactive Storybook documentation" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### üêõ Bug Fixes" >> $GITHUB_STEP_SUMMARY
          echo "- Fixed TypeScript compilation issues" >> $GITHUB_STEP_SUMMARY
          echo "- Improved error handling and logging" >> $GITHUB_STEP_SUMMARY
          echo "- Enhanced performance optimizations" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### üìö Documentation" >> $GITHUB_STEP_SUMMARY
          echo "- Updated API documentation" >> $GITHUB_STEP_SUMMARY
          echo "- Added comprehensive examples" >> $GITHUB_STEP_SUMMARY
          echo "- Improved getting started guide" >> $GITHUB_STEP_SUMMARY

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref_name }}
          body: |
            ## üöÄ Synapse Framework ${{ github.ref_name }}
            
            ### What's New
            
            #### üé® UI Library Enhancements
            - **8 Core Components** - Button, Input, Card, Modal, Toast, Table, Dropdown, Accordion
            - **Complete Animation System** - 15+ animation functions with smooth transitions
            - **Full Accessibility Support** - WCAG 2.1 AA compliance with screen reader support
            - **Interactive Storybook** - 20+ component stories with live examples
            - **Design System** - Complete design tokens and theme system
            
            #### üì± Mobile Development
            - **React Native Adapter** - Convert web components to React Native
            - **Flutter Adapter** - Convert to Flutter widgets
            - **Platform Detection** - Automatic platform detection and adaptation
            - **Cross-Platform Styling** - CSS to platform-specific style conversion
            
            #### üåê Website & Documentation
            - **Professional Website** - Modern design with interactive demos
            - **Live Code Playground** - Try Synapse code in the browser
            - **Component Showcase** - Interactive component demonstrations
            - **Dark/Light Mode** - Theme switching with smooth transitions
            
            #### üèóÔ∏è Framework Improvements
            - **Zero Dependencies** - Truly zero-dependency architecture
            - **TypeScript First** - 100% TypeScript coverage with strict checking
            - **Rust Performance** - High-performance compiler with parallel processing
            - **TDD Enforced** - Test-driven development mandatory
            - **Universal Support** - Any platform, database, storage, protocol
            
            ### üì¶ Packages Updated
            - `@snps/cli@0.3.0` - Main CLI framework
            - `@snps/core@0.3.0` - Core framework with runtime engine
            - `@snps/compiler@0.3.0` - High-performance Rust TypeScript compiler
            - `@snps/testing@0.3.0` - Comprehensive testing framework
            - `@snps/linting@0.3.0` - Strict linting system
            - `@snps/router@0.3.0` - Universal routing system
            - `@snps/state@0.3.0` - Reactive state management
            - `@snps/plugins@0.3.0` - Plugin system
            - `@snps/ui@0.5.0` - **NEW** - Animated UI library with accessibility
            - `@snps/mobile@0.1.0` - **NEW** - Mobile development support
            
            ### üöÄ Getting Started
            ```bash
            # Install the CLI
            npm install -g @snps/cli
            
            # Create a new project
            synapse init my-awesome-app
            
            # Start developing
            cd my-awesome-app && synapse dev
            ```
            
            ### üìö Documentation
            - [Website](https://synapse-framework.dev)
            - [Documentation](https://synapse-framework.dev/docs)
            - [Components](https://synapse-framework.dev/components)
            - [Examples](https://synapse-framework.dev/examples)
            
            ### ü§ù Community
            - [GitHub](https://github.com/synapse-framework/synapse)
            - [Discord](https://discord.gg/synapse-framework)
            - [Twitter](https://twitter.com/synapse_framework)
            
            ---
            
            **Full Changelog**: https://github.com/synapse-framework/synapse/compare/${{ github.event.before }}...${{ github.ref_name }}
          draft: false
          prerelease: false

  # Build Release Artifacts
  build:
    name: Build Release Artifacts
    runs-on: ubuntu-latest
    needs: create-release
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ env.RUST_VERSION }}

      - name: Install dependencies
        run: npm ci

      - name: Build Rust compiler
        run: make build-rust

      - name: Build Node.js packages
        run: make build-node

      - name: Build UI library
        if: ${{ hashFiles('packages/ui/package.json') != '' }}
        run: cd packages/ui && npm run build

      - name: Build Storybook
        if: ${{ hashFiles('packages/ui/package.json') != '' }}
        run: cd packages/ui && npm run build-storybook

      - name: Create distribution package
        run: make package

      - name: Upload release assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./dist/final/synapse-framework-${{ github.ref_name }}.tar.gz
          asset_name: synapse-framework-${{ github.ref_name }}-${{ matrix.os }}.tar.gz
          asset_content_type: application/gzip

  # Publish to NPM
  publish-npm:
    name: Publish to NPM
    runs-on: ubuntu-latest
    needs: [create-release, build]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: npm ci

      - name: Build packages
        run: make build

      - name: Publish packages
        run: npm run publish:all
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  # Deploy Website
  deploy-website:
    name: Deploy Website
    runs-on: ubuntu-latest
    needs: [create-release, build]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build website
        run: |
          cd website
          npm install
          npm run build

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./website/dist
          destination_dir: .

  # Notify Community
  notify:
    name: Notify Community
    runs-on: ubuntu-latest
    needs: [publish-npm, deploy-website]
    if: always()
    steps:
      - name: Notify Discord
        if: ${{ secrets.DISCORD_WEBHOOK != '' }}
        uses: Ilshidur/action-discord@master
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        with:
          args: |
            üéâ **Synapse Framework ${{ github.ref_name }} Released!**
            
            ### üöÄ What's New
            - **Animated UI Library** with accessibility support
            - **Mobile Development** for React Native and Flutter
            - **Complete Design System** with tokens and themes
            - **Interactive Storybook** documentation
            - **Professional Website** with live demos
            
            ### üì¶ Packages
            - `@snps/ui@0.5.0` - UI library with animations
            - `@snps/mobile@0.1.0` - Mobile development support
            - All core packages updated to v0.3.0
            
            ### üîó Links
            - [Website](https://synapse-framework.dev)
            - [GitHub](https://github.com/synapse-framework/synapse)
            - [NPM](https://www.npmjs.com/org/snps)
            
            **Install:** `npm install -g @snps/cli`

      - name: Notify Twitter
        if: ${{ secrets.TWITTER_API_KEY != '' }}
        uses: 8bit-music/action-tweet@v1
        env:
          TWITTER_API_KEY: ${{ secrets.TWITTER_API_KEY }}
          TWITTER_API_SECRET: ${{ secrets.TWITTER_API_SECRET }}
          TWITTER_ACCESS_TOKEN: ${{ secrets.TWITTER_ACCESS_TOKEN }}
          TWITTER_ACCESS_TOKEN_SECRET: ${{ secrets.TWITTER_ACCESS_TOKEN_SECRET }}
        with:
          status: |
            üöÄ Synapse Framework ${{ github.ref_name }} is here!
            
            ‚ú® Animated UI library with accessibility
            üì± Mobile development for React Native & Flutter
            üé® Complete design system with themes
            üìö Interactive Storybook documentation
            
            Try it now: npm install -g @snps/cli
            
            #TypeScript #WebDev #OpenSource #JavaScript
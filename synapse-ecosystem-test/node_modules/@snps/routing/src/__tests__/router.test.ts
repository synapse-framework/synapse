import { test, describe } from 'node:test';
import assert from 'node:assert';
import { Router } from '../index.js';
import http from 'node:http';

describe('Router', () => {
  test('should be an instance of Router', () => {
    const router = new Router();
    assert(router instanceof Router);
  });

  test('should register a GET route', () => {
    const router = new Router();
    const handler = (req: http.IncomingMessage, res: http.ServerResponse) => {};
    router.get('/test', handler);
    assert.deepStrictEqual(router.routes, [{ method: 'GET', path: '/test', handler }]);
  });

  test('should register a POST route', () => {
    const router = new Router();
    const handler = (req: http.IncomingMessage, res: http.ServerResponse) => {};
    router.post('/test', handler);
    assert.deepStrictEqual(router.routes, [{ method: 'POST', path: '/test', handler }]);
  });

  test('should register a PUT route', () => {
    const router = new Router();
    const handler = (req: http.IncomingMessage, res: http.ServerResponse) => {};
    router.put('/test', handler);
    assert.deepStrictEqual(router.routes, [{ method: 'PUT', path: '/test', handler }]);
  });

  test('should register a DELETE route', () => {
    const router = new Router();
    const handler = (req: http.IncomingMessage, res: http.ServerResponse) => {};
    router.delete('/test', handler);
    assert.deepStrictEqual(router.routes, [{ method: 'DELETE', path: '/test', handler }]);
  });
});
